<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="repo">
	<resultMap type="org.gitmining.bean.SimpleRepo" id="simpleRepo">
		<result property="id" column="id" />
		<result property="full_name" column="full_name" />
		<result property="owner_name" column="owner_name" />
		<result property="description" column="description" />
		<result property="update_time" column="update_time" />
		<result property="language" column="language" />
		<result property="stargazers" column="stargazers" />
		<result property="fork_num" column="fork_num" />
	</resultMap>
	
	<resultMap type="org.gitmining.bean.RepoTagPair" id="repoTagPair">
		<result property="id" column="id" />
		<result property="repo_id" column="repo_id" />
		<result property="tag_id" column="tag_id" />
	</resultMap>
	
	<resultMap type="org.gitmining.bean.RepoScore" id="repoScore">
		<result property="repo_id" column="repo_id" />
		<result property="hot" column="hot" />
		<result property="mature" column="mature" />
		<result property="popular" column="popular" />
		<result property="nb" column="nb" />
		<result property="contributor" column="hot" />
		<result property="size" column="size" />
		<result property="update" column="update" />
		<result property="release" column="release" />
		<result property="total" column="total" />
	</resultMap>
	
	<resultMap type="org.gitmining.bean.Repository" id="repository">
		<result property="id" column="id" />
		<result property="full_name" column="full_name" />
		<result property="description" column="description" />
		<result property="type" column="type" />
		<result property="fork" column="fork" />
		<result property="owner_id" column="owner_id" />
		<result property="owner_type" column="owner_type" />
		<result property="owner_name" column="owner_name" />
		<result property="create_time" column="create_time" />
		<result property="push_time" column="push_time" />
		<result property="update_time" column="update_time" />
		<result property="language" column="language" />
		<result property="contributor" column="contributor" />
		<result property="collaborator" column="collaborator" />
		<result property="commit" column="commit" />
		<result property="open_issues" column="open_issues" />
		<result property="closed_issues" column="closed_issues" />
		<result property="open_pull" column="open_pull" />
		<result property="closed_pull" column="closed_pull" />
		<result property="merged_pull" column="merged_pull" />
		<result property="rejected_pull" column="rejected_pull" />
		<result property="commit" column="commit" />
		<result property="stargazers" column="stargazers" />
		<result property="subscribers" column="subscribers" />
		<result property="fork_num" column="fork_num" />
	</resultMap>	

	<select id="searchRepo" resultMap="simpleRepo">
		SELECT id,full_name,owner_name,description,update_time,language,stargazers,fork_num
		FROM
		repotest
		WHERE
		full_name like #{pattern};
	</select>

	<select id="searchSimpleRepoById" resultMap="simpleRepo">
		SELECT id,full_name,owner_name,description,update_time,language,stargazers,fork_num
		FROM
		repotest
		WHERE
		id=#{id};
	</select>	
	<select id="searchRepoByName" resultMap="repository">
		SELECT id,full_name,description,type,fork,owner_id,owner_type,owner_name,create_time,push_time,update_time,
		language,contributor,collaborator,commit,open_issues,closed_issues,open_pull,close_pull,merged_pull,rejected_pull,
		commit,stargazers,subscribers,fork_num
		FROM
		repotest
		WHERE
		full_name=#{full_name};
	</select>
	
	<select id="searchRepoByOwnerName" resultMap="repository">
		SELECT id,full_name,description,type,fork,owner_id,owner_type,owner_name,create_time,push_time,update_time,
		language,contributor,collaborator,commit,open_issues,closed_issues,open_pull,closed_pull,merged_pull,rejected_pull,
		commit,stargazers,subscribers,fork_num
		FROM
		repotest
		WHERE
		owner_name=#{owner_name};
	</select>	
	<select id="searchRepoById" resultMap="repository">
		SELECT id,full_name,description,type,fork,owner_id,owner_type,owner_name,create_time,push_time,update_time,
		language,contributor,collaborator,commit,open_issues,closed_issues,open_pull,closed_pull,merged_pull,rejected_pull,
		commit,stargazers,subscribers,fork_num
		FROM
		repotest
		WHERE
		id=#{id};
	</select>
	<select id="searchRepoScoreById" resultMap="repoScore">
		SELECT repo_id,hot,mature,popular,nb,contributor,size,`update`,`release`,total
		FROM
		reposcore
		WHERE
		repo_id=#{repo_id};
	</select>
	<select id="getAllRepoTagPair" resultMap="repoTagPair">
		SELECT id,repo_id,tag_id
		FROM
		repo_tag;
	</select>
	
	<select id="getRepoTagPairsByTagID" resultMap="repoTagPair">
		SELECT id,repo_id,tag_id
		FROM
		repo_tag
		WHERE
		tag_id=#{tid};
	</select>
	
	<select id="getSimpleReposByTagNode" resultMap="simpleRepo">
		SELECT id,full_name,owner_name,description,update_time,language,stargazers,fork_num 
		FROM 
		repotest 
		WHERE 
		id IN 
		(SELECT repo_id FRPM repo_tag WHERE tag_id IN (SELECT id FROM tag where node_id LIKE concat(#{node_id},'%')))
	</select>
	
	<select id="getSimpleReposByTagName" resultMap="simpleRepo">
		select id,full_name,owner_name,description,update_time,language,stargazers,fork_num from repotest where id in (select repo_id from repo_tag where tag_id in (select t2.id from tag t1,tag t2 where t1.name=#{tag_name} and t2.node_id like concat(t1.node_id,'%')));
	</select>

	<select id="getSimpleReposByTagNameSortFork" resultMap="simpleRepo">
		select id,full_name,owner_name,description,update_time,language,stargazers,fork_num from repotest where id in (select repo_id from repo_tag where tag_id in (select t2.id from tag t1,tag t2 where t1.name=#{tag_name} and t2.node_id like concat(t1.node_id,'%'))) order by fork_num desc;
	</select>

	<select id="getSimpleReposByTagNameSortStar" resultMap="simpleRepo">
		select id,full_name,owner_name,description,update_time,language,stargazers,fork_num from repotest where id in (select repo_id from repo_tag where tag_id in (select t2.id from tag t1,tag t2 where t1.name=#{tag_name} and t2.node_id like concat(t1.node_id,'%'))) order by stargazers desc;
	</select>
</mapper>
